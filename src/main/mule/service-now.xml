<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:servicenow="http://www.mulesoft.org/schema/mule/servicenow" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/servicenow http://www.mulesoft.org/schema/mule/servicenow/current/mule-servicenow.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	<servicenow:config name="ServiceNow_Config" doc:name="ServiceNow Config" doc:id="938c30a0-14c5-4889-a0b8-20e03b98177a" >
		<servicenow:basic-connection username="admin" password="xxEC7KUtnvK3" serviceAddress="https://dev101850.service-now.com" >
			<servicenow:transport >
				<servicenow:basic-auth-http-message-dispatcher-provider username="admin" password="xxEC7KUtnvK3" />
			</servicenow:transport>
		</servicenow:basic-connection>
	</servicenow:config>
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="c8b86dc1-23db-4068-bdd3-cf291997e4d9" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<flow name="service-nowFlow" doc:id="c61c6156-2eb6-45a4-a180-a08939c54ffd" >
		<http:listener doc:name="Listener" doc:id="c930fe06-79f1-4738-89f7-176cda76ffe9" config-ref="HTTP_Listener_config" path="/getIncident"/>
		<ee:transform doc:name="Transform Message" doc:id="99209a14-300a-4fb8-a445-3f830c541a50" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://www.service-now.com/incident
---
{
    ns0#getRecords: {
        ns0#number: "INC0008111"
    }
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<servicenow:invoke doc:name="Invoke" doc:id="2f82f786-90ff-4f10-b503-9df85a312260" config-ref="ServiceNow_Config" service="incident" operation="getRecords"/>
		<ee:transform doc:name="Transform Message" doc:id="44e76f11-d764-4361-bd8a-13bc0eac91b9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="create-incident" doc:id="9bddccdf-dd45-42fb-b087-3bc63c1f9853" >
		<http:listener doc:name="post/create" doc:id="8a490b0e-c358-4882-b97a-9d00f0afbdbd" config-ref="HTTP_Listener_config" path="/create" allowedMethods="POST">
		</http:listener>
		<set-variable doc:name="Get query param DLQ" doc:id="3e69fba3-13bb-4b7c-bd81-ba2eb43f1657" variableName="queryVar" value="#[payload.DLQ as String]"/>
		<set-variable value="#[payload.messages as Number]" doc:name="Number of message" doc:id="f7036f1a-0e97-461a-ad4b-6b6588d6ea56" variableName="numMessages" />
		<set-payload value='#[%dw 2.0&#10;output application/json&#10;&#10;---&#10;&#10;{ "queueList" : [&#10;    {&#10;  &#10;      "queue" : "prod.process.generateinvoice.DLQ" as String,&#10;      "urgency": "1" as Number,&#10;      "impact" : "1" as Number,&#10;      "priority" : "1" as Number&#10;      &#10;    },&#10;     {&#10;     	&#10;      "queue" : "prod.orderlifecycle.DCShipAuth.DLQ" as String,&#10;      "urgency": "3" as Number,&#10;      "impact" : "2" as Number,&#10;      "priority" : "1" as Number&#10;      &#10;      &#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.DCShipAuthKo.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.GenerateInvoice.DLQ "&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.OrderCreation.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.readfileblr.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.sendemailconfirmation.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.wms.shipauthorization.retry.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.m51deret.process.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.m51stellae.process.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.blr-route.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.adobe.sendemails.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.fluent.events.m51deret.retry.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.fluent.events.m51stellae.retry.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.CCFulfilment.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.DCFulfilmentwms.DLQ"&#10;    },&#10;         {&#10;      "queue" : "prod.orderlifecycle.SalesFulfilment.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.cegidexchangeconfirmation.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.dcfulfilmentupdatewms.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.infolog.delivery.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.LTValidateFulfilment.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.orderlifecycle.LTReserveFulfilment.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.orderlifecycle.SendRefundSuccess.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.orderlifecycle.LTValidateFulfilment.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.orderlifecycle.paymentAuthorization.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.orderlifecycle.paymentCapture.DLQ"&#10;    },&#10;     {&#10;      "queue" : "prod.orderlifecycle.paymentRefund.DLQ"&#10;    },  &#10;	{&#10;      "queue" : "prod.orderlifecycle.paymentrefunded.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.stellae.delivery.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.wms.payment.store.queue.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.fluent.events.m51deretReturnReship.retry.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.fluent.acknowledgement.retry.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.fluent.cegid.blr.retry.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.appeasementrefunded.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.cscrtsalert.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.cscshortagealert.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.cscwrongproductalert.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.cscwrongquantityalert.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.dccancelfulfilments.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.lostparcelrefundemail.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.automatic.retry.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.ciam.users.creation.retry.DLQ"&#10;    }, &#10;   &#10;   {&#10;      "queue" : "prod.ciam.users.notification.retry.DLQ"&#10;    }, &#10;   &#10;   {&#10;      "queue" : "prod.ciam.users.subscription.retry.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.fluent.events.invoices.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.fluent.events.m51stellaeReturnReship.retry.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.fluent.events.qualityko.retry.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.fluent.returns.creditmemos.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.infolog.advance.shipping.notice.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.infolog.return.acceptance.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.invoices.fluent.event.retry.dlq"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.alf-route.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.CallM06.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.cancelemailpaybylink.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.ccordercancellation.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.ccordervalidation.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.cdc-route.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.cscdiscrepencyalert.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.csclocaldiscrepencyalert.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.cscpaymentrejectalert.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.cscrefundrejectalert.DLQ"&#10;    }, &#10;   {&#10;      "queue" : "prod.orderlifecycle.cscreturnoverdue.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.cscshortagealertlevel2.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.cscshortagealertlevel3.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.dtr-route.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.eresacreateorder.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.exchangequalitychecked.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.fullcancellationwh.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.fullordercancellation.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.lah-route.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.LTRejectFulfilment.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.multishipmentwh.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.notifycsbadquality.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.notifycswrongreturndate.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.OrderUpdate.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.partialcancelwh.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.paymentCancellation.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.paymentReversals.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.readfilealf-return.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.readfilealf.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.returnReceipt.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.returnreshipok.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.returnreshipped.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.SendASN.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.sendasnparcel.DLQ"&#10;    }, &#10;     {&#10;      "queue" : "prod.orderlifecycle.sendcrossbordercustomerreturncreationemail.DLQ"&#10;    }, &#10;    &#10;     {&#10;      "queue" : "prod.orderlifecycle.sendcustomerreshipconfirmation.DLQ"&#10;    }, &#10;    &#10;     {&#10;      "queue" : "prod.orderlifecycle.sendcustomerreturncreationemail.DLQ"&#10;    }, &#10;    &#10;     {&#10;      "queue" : "prod.orderlifecycle.sendcustomerreturnreceive.DLQ"&#10;    }, &#10;    &#10;     {&#10;      "queue" : "prod.orderlifecycle.sendemailpaybylink.DLQ"&#10;    }, &#10;    &#10;     {&#10;      "queue" : "prod.orderlifecycle.sendm06.DLQ"&#10;    }, &#10;    &#10;     {&#10;      "queue" : "prod.orderlifecycle.SendM50.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.sendmultishipmentorderconfirmation.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.sendmultishipmentordermodification.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.sendpblemailconfirmation.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.SendReturnReShipped.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.stellae.ca.delivery.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.stellae.us.delivery.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.orderlifecycle.waitforstockwh.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.rcu.journal.guestcustomer.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.stellae.advance.shipping.notice.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.stellae.ca.advance.shipping.notice.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.stellae.ca.return.acceptance.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.stellae.return.acceptance.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.stellae.us.advance.shipping.notice.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.stellae.us.return.acceptance.DLQ"&#10;    }, &#10;    {&#10;      "queue" : "prod.usermanagement.users.creations.DLQ"&#10;    },&#10;    {&#10;      "queue" : "prod.usermanagement.users.updates.DLQ"&#10;    }&#10;    &#10;   &#10;&#10;  ]&#10;}]' doc:name="List of queues" doc:id="c53c41fb-2012-4127-87aa-1c25fda60976" />
		<set-variable value="#[{}]" doc:name="response" doc:id="551da67c-9a48-48e9-a4a6-0b64b956b7d6" variableName="response"/>
		<set-variable value="#[%dw 2.0&#10;import * from dw::core::Arrays&#10;output application/json&#10;var checkQueue = payload.queueList.queue&#10;&#10;---&#10;&#10;{ checkQueue: indexOf(checkQueue, vars.queryVar)&#10;&#10;}]" doc:name="checkQueue" doc:id="0b672fad-b99b-4896-a6d7-2dffcf7e1495" variableName="checkQueue" />
		<choice doc:name="Choice" doc:id="b616a6b4-91da-4369-a910-49d33dcaa64a">
				<when expression='#[vars.checkQueue.checkQueue != -1 as Number]'>
					<ee:transform doc:name="JSON to XML" doc:id="082556ae-393d-46ae-af22-ad1dd9eff85c">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 http://www.service-now.com/incident

var indexFind = vars.checkQueue.checkQueue
---
{
	ns0#insert: {
		comments: "This is very urgent. Please resolve it quickly",
		short_description: payload.queueList.queue[indexFind],
		description: payload.queueList.queue[indexFind],
		state: "New",
		work_notes: vars.numMessages,
		impact: payload.queueList.impact[indexFind],
		urgency: payload.queueList.urgency[indexFind],
		priority: payload.queueList.priority[indexFind]
		 	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<servicenow:invoke doc:name="Invoke" doc:id="02207c5f-83fe-4347-a36d-9157c5626682" config-ref="ServiceNow_Config" service="incident" operation="insert"/>
				<ee:transform doc:name="Incident created" doc:id="a3ea08f1-5ac1-44ca-8845-98f7b735c3e4">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json


---

{
	"result": 'Incident created for the queue' ++ vars.queryVar
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;&#10;vars.response ++ payload]" doc:name="response" doc:id="a804c06a-90ba-4adb-99a8-14e98edc00bd" variableName="response" />
				</when>
				<otherwise>
					<ee:transform doc:name="DLQ not found" doc:id="048e7b68-097d-4459-85c5-1fe952336ce3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---

{
	result: "DLQ" ++ vars.queryVar ++ "not found"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;&#10;vars.response ++ payload]" doc:name="response" doc:id="bb307c22-1bcc-400a-b50c-41eea60f3206" variableName="response" />
				</otherwise>
		</choice>
		<set-payload value="#[vars.response]" doc:name="Set Payload" doc:id="989e892a-713e-49f1-82bd-9bda91231709" />
		<logger level="INFO" doc:name="Logger" doc:id="7ec93cc0-6fdd-4e49-b8c7-3f04a4f6e88d" message="#[payload]" />
		<error-handler>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="bd827fab-7cd7-4054-ad25-6e4a7cbd2720" type="ANY">
				<logger level="INFO" doc:name="Logger" doc:id="cb5edb3f-19cc-4528-b4d8-3ea330125f6d" message="#[error.description]"/>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
